- hosts: localhost
  gather_facts: no
  vars_files:
    - variables/vars.yml
    - variables/encrypt-iam-account.yml
  tasks:
    - name: provision CentOS VM (EC2)
      ec2:
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}" 
        ec2_region: "{{ AWS_REGION }}"
        instance_type: t2.micro
        keypair: "keypair-for-ansible"
        image: "ami-0157b1e4eefd91fd7" # centOS v8
        #image: "ami-0a248ce88bcc7bd23" # centOS v7  (7.8.2003)
        assign_public_ip: yes
        vpc_subnet_id: "subnet-09678117a9fb4f6f1"
        group_id: "sg-14e5924e"
        wait: true
        exact_count: 2
        count_tag: 
          Name: DemoA
        instance_tags:
          Name: "CentOS VM"
      register: ec2
    - debug:
        var: ec2

    - name: add hosts to inventory  **********
      add_host:
        hostname: '{{ item.public_ip }}'
        groupname: demogroup  # after this section is run, then we have the IPs in "demogroup"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no" # we attach a variable to "demogroup", We don't want to confirm the key validation
        ansible_ssh_private_key_file: keypair-for-ansible.pem
      loop: '{{ ec2.instances }}'
      
- hosts: demogroup
  gather_facts: no  # if this is "yes" , then a SSH will no be waiting for long.
  remote_user: centos
  tasks:
    
    - debug: var=demogroup

    - name: wait for SSH
      wait_for_connection:
        delay: 2
        timeout: 200
    # - name: check host status by Ping
    #  ping:

    # - name: check version ****** 1st ****** 
    #   command: hostnamectl
    #   register: myversion1
    # - debug:
    #     var: myversion1
    
    # - name: upgrade all packages
    #   yum:
    #     name: '*'
    #     state: latest
    #   become: true

    # - name: check version ****** 2nd ****** 
    #   command: hostnamectl
    #   register: myversion2
    # - debug:
    #     var: myversion2 

#stat here

    # - name: enable Docker CE repository *****
    #   command: dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
    #   become: true
    #   register: mycmd
    # - debug:
    #     var: mycmd

    # - name: verify repo *****
    #   command: dnf repolist -v
    #   become: true
    #   register: mycmd
    # - debug:
    #     var: mycmd 

    # - name: see list *****
    #   command: dnf list docker-ce
    #   become: true
    #   register: mycmd
    # - debug:
    #     var: mycmd 

    # - name: install Docker CE *****
    #   command: dnf install docker-ce --nobest -y
    #   become: true
    #   register: mycmd
    # - debug:
    #     var: mycmd

    # - name: enable and start Docker CE *****
    #   command: systemctl start docker
    #   become: true
    #   register: mycmd
    # - debug:
    #     var: mycmd

    # - name: enable and start Docker CE *****
    #   command: systemctl enable docker
    #   become: true
    #   register: mycmd
    # - debug:
    #     var: mycmd

    # - name: check if Docker is installed
    #   command: systemctl status docker
    #   register: docker_check
    #   ignore_errors: yes
    #   become: true
    # - debug:
    #     var: docker_check


    - name: install python3 *****
      command: dnf install python3 -y
      become: true
      register: mycmd
    - debug:
        var: mycmd 

    - name: install pexpect ***** # if we want to execute linux command, we need to install PEXPECT
      pip:
        name: pexpect
      become: yes
      
    - name: generate the key, RSA AES256 *******
      expect:
        command: openssl genrsa -aes256 -out ca-key.pem 4096
        responses:
          'Enter': "12345"
          'Verifying': "12345"
          # "Enter pass phrase for ca-key.pem": "12345"
          # "Verifying - Enter pass phrase for ca-key.pem": "ansible"
      # you don't want to show passwords in your logs
      no_log: false
      register: mycmd
    - debug:
        var: mycmd 

    - name: generate the key, x509 *******
      expect:
        command: openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem
        responses:
          'Enter pass phrase for ca-key.pem': "12345"
          'Country Name': "th"
          'State or Province Name': "Bangkok"
          'Locality Name': "Sukhumwit"
          'Organization Name': "Kixxxxch"
          'Organizational Unit Name': "DevOpsTeam"
          'Common Name': "{{ hostvars[groups['demogroup']['public_dns_name']] }}"
          'Email Address': "sample@kixxxxch.com"
      # you don't want to show passwords in your logs
      no_log: false
      register: mycmd
    - debug:
        var: mycmd 